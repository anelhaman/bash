#!/bin/sh

TOKENSECRET_FILE=~/.google-authenticator/cg-aws-operation-secret
CREDENTIAL_FILE=~/.aws/credentials
PROFILE=cg-aws-operation
OUTFILE=$(mktemp -u)

if ! which oathtool >/dev/null 2>&1; then
  echo "oathtool is required"
  exit 1
fi

get_token() {
  local otp_secret=$(cat $TOKENSECRET_FILE)
  oathtool --totp --base32 $otp_secret

}

get_value() {
  KEY=$1
  cat $OUTFILE | grep -w "$KEY" | sed 's/"//g' | sed 's/,//g' | \
  sed 's/^[[:blank:]]+//g' | awk '{print $2}'
}

aws sts get-session-token --profile $PROFILE --serial-number <arn-name-with-mfa> --token-code $(get_token) > $OUTFILE

aws_access_key_id=$(get_value "AccessKeyId")
aws_secret_access_key=$(get_value "SecretAccessKey")
aws_session_token=$(get_value "SessionToken")

sed -i '' '/### CG-AWS-OPERATION-MFA ###/,/### END CG-AWS-OPERATION-MFA ###/d' $CREDENTIAL_FILE

cat << EOF >> $CREDENTIAL_FILE
### CG-AWS-OPERATION-MFA ###

[cg-aws-operation-mfa]
output = json
region = ap-southeast-1
aws_access_key_id = $aws_access_key_id
aws_secret_access_key = $aws_secret_access_key
aws_session_token = $aws_session_token

### END CG-AWS-OPERATION-MFA ###
EOF

cat $CREDENTIAL_FILE | sed -n -e '/### CG-AWS-OPERATION-MFA ###/,/### END CG-AWS-OPERATION-MFA ###/p'

rm -f $OUTFILE
